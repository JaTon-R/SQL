# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

--Check to see what information is in this database.
SELECT * FROM Spotifydata
LIMIT 6;

#Then I came up with differnt questions to ask about the data in the table.

--Who are the top 10 artists based on popularity?
SELECT artist_name, popularity
FROM spotifydata
ORDER BY popularity DESC 
LIMIT 10;

-- What artist released the longest song? 
SELECT artist_name, duration_ms
FROM Spotifydata
ORDER By duration_ms DESC 
LIMIT 1;


--What's the average danceability for the 10 most popular songs?
SELECT AVG(danceability) AS Average_danceability
FROM Spotifydata
WHERE popularity IN (SELECT popularity
FROM Spotifydata
ORdER BY popularity DESC
LIMIT 10);

--What is the tempo and duration of the song with the highest populartity rating? 
SELECT tempo, duration_ms
FROM Spotifydata
WHERE popularity IN (SELECT popularity
FROM Spotifydata
ORdER BY popularity DESC
LIMIT 1);
-- 2 songs have the hightest popularity rating of 95


-- What songs does Justin Bieber have that have a popularity rating of 90 or higher with a song key of 6 or higher?
SELECT track_name, popularity
FROm Spotifydata
WHERE artist_name LIKE "%Bieber%"
AND popularity >=90;


-- Determine the avg popularity, danceability, and energy by artist and track. 
SELECT
artist_name
,track_name
,avg(popularity)
,avg(danceability)
,avg(energy)
FROM spotifydata
GROUP BY artist_name, track_name;

--Creating a CTE 
--Calculate the average popularity for the artists in the Spotify data table. 
--Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.

WITH popularity_average_CTE AS (
SELECT Spotifydata.artist_name, AVG(Spotifydata.popularity)
FROM Spotifydata
GROUP BY artist_name);

SELECT artist_name, AVG(popularity)
FROM popularity_average_CTE
WHERE AVG(popularity) >= 90;

