SELECT * FROM customers;

SELECT * FROM FebSales LIMIT 6;

--How many many unique orders were placed in January? In other words, how many distinct order ids do we have?
--Remember to filter out the blank and incorrect order IDs like we did in the "dealing with messy data" section of the previous lesson!

SELECT  COUNT(DISTINCT orderID)
FROM JanSales
WHERE LENGTH(orderID) = 6;

SELECT COUNT(distinct orderid)
FROM JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

--How many of those orders were for an iPhone?

SELECT  COUNT(DISTINCT orderID)
FROM JanSales
WHERE LENGTH(orderID) = 6
AND product = "iPhone";

SELECT COUNT(distinct orderid)
FROM JanSales
WHERE Product='iPhone'
AND length(orderid) = 6
AND orderid <> 'Order ID';

--Select the customer account numbers for all the orders that were placed in February.

SELECT DISTINCT acctnum
FROM customers
INNER JOIN FebSales
ON customers.order_id = FebSales.orderID
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

--Which product was the cheapest one sold in January, and what was the price?

SELECT  DISTINCT Product, price
FROM JanSales
WHERE price IN (SELECT MIN(price) FROM JanSales);

--What is the total revenue for each product sold in January?
--(Revenue can be calculated using the number of products sold and the price of the products).

SELECT DISTINCT Product, SUM(Quantity)*price
FROM JanSales
Group BY Product;

SELECT Product, SUM(quantity)*price as Revenue
FROM BIT_DB.JanSales
GROUP BY product;

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

SELECT Product, SUM(Quantity), SUM(quantity)*price as Revenue
FROM FebSales
WHERE location LIKE "%548 Lincoln%" 
GROUP BY Product;

SELECT
sum(Quantity),
product,
sum(quantity)*price as revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(DISTINCT acctnum), AVG(Quantity*price)
FROM customers
LEFT Join FebSales 
ON customers.order_id = FebSales.orderID
WHERE Quantity >2 
AND length(orderid) = 6
AND orderid <> 'Order ID'

--List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(Quantity)
FROM FebSales
WHERE location LIKE "%Los Ang%"
GROUP BY product;


--Which locations in New York received at least 3 orders in January, and how many orders did they each receive? (Hint: use HAVING).
SELECT distinct location, count(orderID)
FROM JanSales
WHERE location LIKE "%NY%"
AND length(orderid) = 6
GROUP By orderID 
HAVING COUNT(orderID) >=3;

--How many of each type of headphone were sold in February?

SELECT Product, SUM(Quantity)
FROM FebSales
WHERE Product LIKE "%headphone%"
GROUP BY Product;

--What was the average amount spent per account in February? (Hints: For this question, we want the average amount spent / number of accounts, not the amount spent by each account. To multiply, you can use the * symbol, and to divide, you can use the / symbol.)
SELECT sum(quantity*price)/count(customers.acctnum) AS Avg_amount_spent
FROM FebSales 
LEFT JOIN customers 
ON Febsales.orderID = customers.order_id
WHERE length(orderid) = 6; 

--What was the average quantity of products purchased per account in February? (Hint: just like question 3, we want the overall average, not the average for each account individually).
SELECT SUM(Quantity)/count(customers.acctnum)
FROM FebSales
LEFT JOIN customers
ON FebSales.orderID = customers.order_id
WHERE length(orderid) = 6;


--Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT Product, SUM(price*Quantity) AS revenue
FROM JanSales
GrouP BY Product 
ORDER BY SUM(price*Quantity) DESC
LIMIT 1;




